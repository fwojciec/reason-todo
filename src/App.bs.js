// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Uuid = require("bs-guid/src/Uuid.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");

function newTodo(text) {
  var todoId = Uuid.V4[/* uuidv4 */0](/* () */0);
  return /* record */[
          /* id */todoId,
          /* text */text,
          /* completed */false
        ];
}

function check(id, todos) {
  return List.map((function (t) {
                var match = t[/* id */0] === id;
                if (match) {
                  return /* record */[
                          /* id */t[/* id */0],
                          /* text */t[/* text */1],
                          /* completed */!t[/* completed */2]
                        ];
                } else {
                  return t;
                }
              }), todos);
}

function $$delete(id, todos) {
  return List.filter((function (t) {
                  return t[/* id */0] !== id;
                }))(todos);
}

function valueFromEvent($$event) {
  return $$event.target.value;
}

function App$Input(Props) {
  var onSubmit = Props.onSubmit;
  var match = React.useState((function () {
          return "";
        }));
  var onChange = match[1];
  var value = match[0];
  return React.createElement("input", {
              className: "new-todo",
              placeholder: "What do you want to do?",
              type: "text",
              value: value,
              onKeyDown: (function ($$event) {
                  if ($$event.key === "Enter") {
                    Curry._1(onSubmit, value);
                    return Curry._1(onChange, (function (param) {
                                  return "";
                                }));
                  } else {
                    return 0;
                  }
                }),
              onChange: (function ($$event) {
                  return Curry._1(onChange, $$event.target.value);
                })
            });
}

var Input = /* module */[/* make */App$Input];

function App$TodoItem(Props) {
  var todo = Props.todo;
  var onToggle = Props.onToggle;
  var onDelete = Props.onDelete;
  return React.createElement("div", {
              className: "item"
            }, React.createElement("label", undefined, React.createElement("input", {
                      className: "checkbox",
                      checked: todo[/* completed */2],
                      type: "checkbox",
                      onChange: (function (_event) {
                          return Curry._1(onToggle, /* () */0);
                        })
                    }), todo[/* text */1]), React.createElement("button", {
                  className: "btn-delete",
                  onClick: (function (_event) {
                      return Curry._1(onDelete, /* () */0);
                    })
                }, "Delete"));
}

var TodoItem = /* module */[/* make */App$TodoItem];

function App(Props) {
  var match = React.useReducer((function (state, action) {
          switch (action.tag | 0) {
            case 0 : 
                return /* record */[/* todos : :: */[
                          newTodo(action[0]),
                          state[/* todos */0]
                        ]];
            case 1 : 
                return /* record */[/* todos */check(action[0], state[/* todos */0])];
            case 2 : 
                return /* record */[/* todos */$$delete(action[0], state[/* todos */0])];
            
          }
        }), /* record */[/* todos : [] */0]);
  var dispatch = match[1];
  return React.createElement("div", {
              className: "container"
            }, React.createElement("h3", undefined, "Todo App"), React.createElement(App$Input, {
                  onSubmit: (function (value) {
                      return Curry._1(dispatch, /* Add */Block.__(0, [value]));
                    })
                }), $$Array.of_list(List.map((function (todo) {
                        return React.createElement(App$TodoItem, {
                                    todo: todo,
                                    onToggle: (function (param) {
                                        return Curry._1(dispatch, /* Check */Block.__(1, [todo[/* id */0]]));
                                      }),
                                    onDelete: (function (param) {
                                        return Curry._1(dispatch, /* Delete */Block.__(2, [todo[/* id */0]]));
                                      }),
                                    key: todo[/* id */0]
                                  });
                      }), match[0][/* todos */0])));
}

var make = App;

exports.newTodo = newTodo;
exports.check = check;
exports.$$delete = $$delete;
exports.valueFromEvent = valueFromEvent;
exports.Input = Input;
exports.TodoItem = TodoItem;
exports.make = make;
/* Uuid Not a pure module */
